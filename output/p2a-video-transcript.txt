 I'd like to introduce an alternative state machine for Project 2's movie watcher calculations. Dr. Pease tutorial video he introduces one with four states and I believe three states, but it's certainly sufficient and I expect it's easier to implement and easier to reason about, easier to get right the first time. So what are these three states? Well, it depends on what we have. So for now consider only attacks. So an attack involves a jet-idek deployment, a riding on the planet, and a stronger Sith deployment later a riding on the planet. We need to know whether or not there is a jet-idek deployment and whether or not an attack has happened. And since there can be no attack without a jet-idek deployment, that leaves us three states. So no jet-idek deployment and no attack yet. I will name that state zero. That's not a good zero. I mean that state zero. And that's our initial state. State one is there have been jet-idek deployments that have landed on the planet, but there have not been any attacks yet. State one. And then state two, we've had a jet-idek deployment and an attack. So it's really only in the state two case that will have an attack to print for movie watcher output. But how do we get there? The way we get there is through transitions. And each transition represents a deployment landing on the planet. From state zero, if a Sith deployment arrives, nothing happens because Sith deployment does not take us to state one. Okay, a Sith deployment cannot land on a planet without a jet-idek deployment. So that's state zero and cause an attack to transition to state two. And it also can't cause that planet to suddenly have a jet-idek deployment. The Sith deployment landing on planet at state zero must transition the planet to state zero. Oh wait, that's not what I meant to do. It doesn't have to be an S. Okay, so nothing happens here. You don't need to worry about that Sith deployment ever again. You don't need to remember it because it's never going to be involved in any attack on this planet. And it's not going to have any effect on any attack ever on this planet. But what about a jet-idek deployment? Well, when a jet-idek deployment arrives on this planet in state zero, it transitions the planet to state one. So it's primed for an attack. There's not yet been an attack. That's why we're not in state two. But there is a jet-idek deployment. So that's why we're not in state zero. So we're in this intermediate state one. And how do we get out of state one? Well, we get out of state one by an attack. That's when a Sith deployment arrives and I'll call this S sub A. A Sith deployment arrives and attacks an existing jet-idek deployment. Now this has a condition. The Sith deployment must be... I don't remember if it's strictly stronger or not weaker than the weakest jet-idek deployment on the planet so far. But what if a Sith deployment arrives in state one and it doesn't want to mount an attack? It knows it'll lose. Well, then we have a transition back to state one. I'll just label this S because we can just forget about that Sith deployment. It's never going to be involved in any attack on this planet ever. Okay. Now what if a jet-idek deployment arrives on the planet in state one? It's not going to cause an attack. So the planet stays in state one. Okay. And that's all our transitions. I'll just state one. So if a jet-idek deployment arrives, we stay in state one. If a Sith deployment arrives and doesn't attack, we stay in state one. If a Sith deployment arrives and attacks, we transition to state two. Now, we have the same three options once we're in state two. Jet-idek deployment arrives so we've still had an attack. Sith deployment arrives and doesn't mount an attack. We've still had an attack on this planet. So we stay in state two. Sith deployment arrives and does mount an attack? We stay in state two because we have some attack. Now, the distinction between S and S.A. is whether or not an attack happens. So the condition for S.A. S.A. There exists a jet-idek deployment on the planet and well not the plan. There's a jet-idek deployment that's weaker than arriving Sith deployment. And so there are two ways we could not have an attack. So up in this case, here, there's no jet-idek deployment. So this condition is not satisfied. And here and here, there is a jet-idek deployment on the planet. But there's no jet-idek deployment that's weaker than the arriving Sith deployment. So this is not satisfied. So that's why we don't have S.A. We just had to pass. So in just the S transitions, nothing happens. It's a very easy case to handle in your code. Because notice they all transition to the same state. You don't need to remember anything because no attack happened and no weaker jet-idek deployment arrived that sets up a more exciting attack later on. Now, what happens when a jet-idek deployment arrives? Well, we have all our state transitions, but that's not a J. Something else happens. I'm also going to draw a line here because above is the condition for S sub A and below is the description of what happens. When a jet-idek deployment arrives, we need to remember the weakest jet-idek deployment. So I'm actually going to call this one J-star or not J-star J-prime. So J-prime, remember this deployment as the weakest jet-idek deployment. As notice for the attack condition, we only need to know about the existence of some jet-idek deployment that's weaker than the arriving-sith deployment. Well, if the weakest jet-idek deployment is weaker than the arriving-sith deployment, then yes, there is some jet-idek deployment that satisfies this condition. And if the weakest jet-idek deployment is not weaker than the arriving-sith deployment, then this condition is not satisfied. So you don't need to know anything except the weakest jet-idek deployment already on the planet. So when the first jet-idek deployment arrives, that's J-prime here. It is the weakest jet-idek deployment that has arrived on the planet. Now, what about the rest? If weaker than the weakest, we remember the new jet-idek deployment as the weakest. Okay, it's pretty straightforward. And also going to call this S-A-prime. And our other two transitions are S-A and S-A-prime. Now, what happens in S-A-prime? Well, in movie watcher mode, we need to remember the most exciting attack on this planet. Well, the first time an attack happens, that's this S-A-prime transition, that attack is the most exciting attack. So remember this, remember, you guys call this attack as the most exciting. And this attack involves the newly arrived sith deployment, the new sith deployment, and the weakest jet-idek deployment. And remember, we've remembered the weakest jet-idek deployment already. And now, S-A-prime is very similar, but the only difference is we already have the most exciting attack, so we need to compare. If this attack more exciting, remember it as the most exciting. And really, that's all there is to it, right? You run the state machine every time a deployment arrives. You perform the transition corresponding to that state, and that'll depend on really only two things, three things, the current state, the type of the deployment jet-iarsith. And then in certain cases, whether or not there is a weaker jet-idek deployment already on the planet, or that has already arrived on the planet. It might not be there anymore, but that doesn't matter for movie watchers. You just run this until the end. And when the time comes to print your movie watcher output, each planet has remembered its weakest jet-idek deployment, which doesn't matter anymore. But it is also remembered its most exciting attack, if it's in state two. Now, it's not in state two, there hasn't been an attack, so I believe you print negative one for all your timestamps or whatever. I don't remember exactly what goes into movie watcher output. But if you are in state two, you have your most exciting attacks. And then, symmetrically, the same thing applies to ambushes, just the jet-iarsith, more or less swapped. So, that's all. I hope this was able to help you along in the project.